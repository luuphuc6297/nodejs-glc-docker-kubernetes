# name: Build and Deploy to GKE

# on:
#     push:
#         branches: [main]
#     # workflow_dispatch:

# # env:
# #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
# #     DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
# #     PRODUCT_REPO_NAME: ${{ secrets.PRODUCT_REPO_NAME }}

# env:
#   PROJECT_ID: ${{ secrets.GKE_PROJECT }}
#   GAR_LOCATION: us-central1
#   GKE_CLUSTER: cluster-1
#   GKE_ZONE: us-central1-c
#   DEPLOYMENT_NAME: gke-test
#   REPOSITORY: samples
#   IMAGE: static-site

# jobs:

# # jobs:
# #     login:
# #       runs-on: ubuntu-latest
# #       steps:
# #         - name: Work Dir
# #           run: |
# #               echo $DOCKER_USERNAME
# #               echo $DOCKERHUB_TOKEN
# #               echo $PRODUCT_REPO_NAME
# #         - name: Login to DockerHub
# #           uses: docker/login-action@v2
# #           with:
# #             username: ${{ secrets.DOCKER_USERNAME }}
# #             password: ${{ secrets.DOCKERHUB_TOKEN }}
# #     create-image:
# #         name: Create image
# #         needs: [login]
# #         runs-on: ubuntu-latest
# #         steps:
# #             - uses: actions/checkout@v3
# #             # - name: Work Dir
# #             #   run: |
# #             #       echo $DOCKER_USERNAME
# #             #       echo $DOCKERHUB_TOKEN
# #             #       echo $PRODUCT_REPO_NAME
# #             # - name: Docker login
# #             #   run: echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
# #             #   env:
# #             #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
# #             #     DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
# #             - name: Build user service docker image
# #               run: docker build . --file Dockerfile -t "$DOCKER_USERNAME/$PRODUCT_REPO_NAME:latest"
# #             - name: Push user service docker image
# #               run: docker push "$DOCKER_USERNAME/$PRODUCT_REPO_NAME:latest"

# #     deployment:
# #         needs: [create-image]
# #         runs-on: ubuntu-latest
# #         steps:
# #             - uses: actions/checkout@v3
# #             - name: kubectl - Google Cloud GKE cluster.
# #               uses: ameydev/gke-kubectl-action@master
# #               env:
# #                   APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
# #                   PROJECT_ID: ${{ secrets.PROJECT_ID }}
# #                   CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
# #                   ZONE_NAME: asia-southeast2
# #               with:
# #                   args: apply -f k8s/
